{"name":"Disclaimr","tagline":"Disclaimr - Mail Disclaimer Server","body":"# Disclaimr - Mail disclaimer server\r\n\r\n## Introduction\r\n\r\n**Disclaimr** is a [milter daemon](https://www.milter.org/), that dynamically\r\nadds mail disclaimers (also called footers) to filtered mails.\r\n\r\nIt uses [Django](https://www.djangoproject.com/) for database abstraction and\r\n to present an easy-to-use web UI for non-technical staff.\r\n\r\nIt has the following features:\r\n\r\n* Easy to use (and role-based) web user interface to allow non-technical staff\r\n  to modify disclaimers\r\n* Add disclaimers to the body of incoming emails or replace tags inside the\r\n  body with disclaimer texts\r\n* Support for differentiating between plaintext and HTML-mails\r\n* Support for resolving the sender of the incoming mails and use their data\r\n  from an LDAP-server dynamically inside a disclaimer\r\n* Support for encrypted mails (S/MIME, PGP)\r\n\r\n## Requirements\r\n\r\n* [Python 2.7](https://www.python.org)\r\n* [python-libmilter](https://github.com/crustymonkey/python-libmilter)\r\n* [python-netaddr](https://github.com/drkjam/netaddr)\r\n* [Django 1.7](https://www.djangoproject.com/)\r\n* [Grappelli](http://grappelliproject.com/)\r\n* [Python-LDAP](http://www.python-ldap.org/)\r\n* [lxml](http://lxml.de/)\r\n* [Django-admin-sortable2](https://github.com/jrief/django-admin-sortable2)\r\n* [mysqldb](https://github.com/farcepest/MySQLdb1) (or another database\r\n  backend for Python. Disclaimr doesn't support Sqlite)\r\n\r\n## Installation\r\n\r\n### Python packages\r\n\r\nInstall the requirements of Disclaimr (for example using pip):\r\n\r\n    pip install python-libmilter netaddr django django-grappelli python-ldap lxml django-admin-sortable2\r\n\r\nYou still need to install the python package for the database backend you'd\r\nlike to use. For example, to use MySQL with the mysqlclient API driver, run:\r\n\r\n    pip install mysqlclient\r\n\r\nDownload the latest Disclaimr release and put it in an accessible path.\r\n\r\n### Database setup\r\n\r\nCreate a database in your preferred backend and configure it by copying the\r\nfile \"db.conf.dist\" to \"db.conf\" inside the settings subdirectory and modify\r\nit according to your backend.\r\n\r\nTo initialize the database, run \r\n\r\n    python manage.py migrate\r\n\r\n### Creating a superuser\r\n\r\nTo create an initial superuser to access the Disclaimr Frontend, use\r\n\r\n    python manage.py createsuperuser\r\n\r\n## Usage\r\n\r\nDisclaimr can run from any server meeting the above requirements. Just start\r\nthe disclaimr milter and configure your mail\r\nserver to use it. For optimal performance, though, it's better to run Disclaimr\r\ndirectly from your mail server.\r\n\r\nTo start the milter, run\r\n\r\n    python disclaimr.py\r\n\r\nDisclaimr will run on localhost, Port 5000 per default. You can specify\r\nanother socket-option using\r\n\r\n    python disclaimr.py -s <socket-option>\r\n\r\nFor example \"inet:localhost:6000\" to use Port 6000 instead of 5000.\r\n\r\nIf you'd like to use the resolver feature with an SSL-enabled LDAP-server,\r\nthat has no proper certificate, you'll have to add the \"--ignore-cert\" option\r\n to the daemon.\r\n\r\nRun disclaimr.py with --help for more information.\r\n\r\n## Administration\r\n\r\nDisclaimr comes with its own web frontend based on Django. You can use the\r\nDjango testserver by running\r\n\r\n    python manage.py runserver\r\n\r\nIt's recommended to use a \"real\" web server and also use TLS-Encryption\r\ninstead of the testserver. Please see [Django deployment options]\r\n(https://docs.djangoproject.com/en/1.6/howto/deployment/) for more detail.\r\n\r\n### Introduction\r\n\r\nDisclaimr's configuration database is based on the following objects:\r\n\r\n* Disclaimer: A disclaimer is a text, which can be used in an action. A\r\n  plaintext- and an HTML-part can be configured.\r\n* Rules: Rules are a combined set of requirements and actions. Each rule will\r\n be checked in the order they are sorted in. The action of the first rule\r\n matching will be carried out (as long as the \"continue\" flag of the rule\r\n isn't checked)\r\n  * Requirements: Requirements decide, wether a connection to the milter\r\n    daemon will enable the actions of the rule. If one of\r\n    the requirements fail, the rule will be disabled. Also, there has to be at\r\n    least one requirement set to \"Allow\" for the rule to be taken into account.\r\n  * Actions: Actions do something with the body of the incoming mail.\r\n    They can for example add a disclaimer to the body or replace a tag inside\r\n     the body with the disclaimer text.\r\n* Directory Servers: If you'd like to use the resolver feature, you use\r\n  directory server-objects to connect to an LDAP server\r\n\r\nEvery object contains a \"name\" and an optional \"description\" field to\r\nidentify it. There are additional fields to configure as follows:\r\n\r\n## Disclaimers\r\n\r\nDisclaimers are the configuration objects, which will be merged with the\r\nbody of an incoming mail. You can configure texts for plaintext- and\r\nHTML-mails (or use the plaintext-value also for HTML-mails). Additionally,\r\nyou can use tags inside the text, which will be replaced by dynamic data\r\nbased upon the incoming mail.\r\n\r\n* Text-part: The disclaimer text for plaintext-mails\r\n  * Use template tags: Parse the plaintext-disclaimer for resolver-tags\r\n    (see below)\r\n* Use text part: Instead of using the text inside the \"Html-part\"-field,\r\n  use the text of the plaintext-field also for HTML-mails\r\n* Html-part: The disclaimer text for HTML-mails\r\n  * Use template tags: Parse the HTML-disclaimer for resolver-tags (see below)\r\n* Fail if template doesn't exist: If a tag from the resolver feature cannot be\r\n  replaced, this disclaimer will not be used. If this is not enabled, the tag\r\n   will be removed with an empty string\r\n* Use HTML as a fallback: If the incoming mail only contains mime-parts that\r\n  aren't either text or HTML, Disclaimr will use the text disclaimer per\r\n  default. If you check this option, Disclaimr will instead use the HTML\r\n  disclaimer.\r\n\r\n## Rules\r\n\r\nRules are the basic building blocks of the milter workflow. The requirements\r\nwill be checked and, if no requirement fails, the actions will be carried out\r\n in the order they are sorted in the web ui.\r\n\r\nThe order the rules will be carried out can also be changed using the web ui.\r\n\r\nIf the additional parameter \"Continue after this rule\" is checked, additional\r\n matching rules, will be carried out after this rule.\r\n\r\n### Requirements\r\n\r\n* Enabled: Is this requirment enabled? (if disabled, the requirement will be\r\n  skipped)\r\n* Sender-IP address/Netmask: An IP-Address and CIDR-Netmask, which have to\r\n  match the host connecting to the milter\r\n* Sender: A regexp, which has to match the \"MAIL FROM\"-Envelope\r\n* Recipient: A regexp, which has to match the \"RCPT TO\"-Envelope\r\n* Header-filter: A regexp, which has to match the complete headers of the\r\n  incoming mail\r\n* Body-filter: A regexp, which has to match the complete body of the incoming\r\n  mail (the body is a text containing all mime-parts of the mail)\r\n* Action: If the different matches succed, will this requirement accept the\r\n  rule or deny (disable) it?\r\n\r\n### Actions\r\n\r\n* Action: What should be done with the mail body. Currently these actions are\r\n  supported:\r\n  * Add the disclaimer to the body\r\n  * Replace the regexp in the field \"Action parameters\" with the disclaimer\r\n  * Add the disclaimer to the body by adding another MIME-part to it and\r\n    adding the orignal mail as a mime/rfc-822-part (useful for\r\n    encrypted/signed E-Mails)\r\n* Mime type: Use this action only for bodies of this mime type\r\n* Action parameters: Additional parameters for the selected action\r\n* Resolve the sender: Use the resolver feature and try to resolve the\r\n  \"MAIL FROM\"-envelope\r\n* Fail when unable to resolve sender: If the sender can not be resolved,\r\n  don't apply the action\r\n* Disclaimer: Choose the disclaimer to use\r\n\r\n## Directory servers\r\n\r\n* Base-dn: The LDAP base dn\r\n* Auth-Method: The authentication method to use when connecting to the\r\n  directory server. Currently supported methods are:\r\n  * None: Do not authenticate at all, use a guest access\r\n  * Simple: Use simple authentication\r\n* User-DN: User-DN to authenticate with\r\n* Password: Password to authenticate with\r\n* Search-Query: A query to search for when resolving an email-address. The\r\n  tag %s will be replaced with the address while resolving\r\n* URLs: One or more URLs to connect to this directory server. They will be\r\n  used in the order you specify if one cannot be contacted\r\n\r\n## Resolver feature\r\n\r\nDisclaimr can also be used to generate dynamic footers. For this to work,\r\nin most cases it has to have access to the contact data of the sender of the\r\nemail. For this purpose, Disclaimr can connect to an LDAP-server and retrieve\r\nthe data based on the sender-emailaddress.\r\n\r\nIf this succeeds, it can dynamically replace tags inside the disclaimer with\r\nLDAP fields.\r\n\r\nThese tags can be used in a disclaimer in any case:\r\n\r\n* {sender}: the \"MAIL FROM\"-envelope value\r\n* {recipient}: the \"RCPT TO\"-envelope value\r\n* {header[\"key\"]}: A mail header with the key \"key\"\r\n\r\nThe following tag will be accesible when the resolver succeeds:\r\n\r\n* {resolver[\"key\"]}: The value of the LDAP-property \"key\" from the resolver\r\n\r\n## Supporting Encryption\r\n\r\nEncrypted mails (either using PGP or S/MIME) are a problem when you like to\r\ncentrally manage disclaimers or footers. As the text of the mails are\r\nencrypted, you cannot look into it to replace tags with dynamic footers. When\r\n the mails are signed, you also cannot just add text, because that would\r\n break the signature.\r\n\r\nWhat you *can* do, is add another mime part to it. The basic workflow of\r\nsupporting encryption while maintaining a dynamic footer is:\r\n\r\n* Generate the disclaimer as a separate mime-part\r\n* Convert the original mime-part to a rfc822-part (\"an attached message\")\r\n* Build a multipart-mail with both parts attached\r\n\r\nTo identify pgp or mime parts, you can use the following methods:\r\n\r\n### Detecting PGP\r\n\r\nTo detect pgp, add a requirement, that matches the body for the following\r\nregexp:\r\n\r\n    BEGIN PGP SIGNED MESSAGE|BEGIN PGP MESSAGE\r\n\r\n### Detecting S/MIME\r\n\r\nTo detect an S/MIME-mail use a requirement with a header filter and this regexp:\r\n\r\n    application/pkcs7-signature|application/pkcs7-mime\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}